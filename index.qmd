---
title: "Styringsinformasjon fra SPEIL"
date-modified: last-modified
execute:
    output: false
    echo: false
format:
    html:
        self-contained: true
        theme:
            - custom.scss
---


```{python}
import datetime as dt
import locale
import os
from functools import partial
from dotenv import load_dotenv
from google.cloud import bigquery

from figurer import (
    antall_med_glidende_gjennomsnitt,
    antall_vedtak_fattet,
    mottatte_søknader,
    antall_avsluttet_uten_utbetaling,
    tid_fra_søknad_til_vedtak,
)

try:
    locale.setlocale(locale.LC_TIME, "nb_NO") # linux
except:
    locale.setlocale(locale.LC_TIME, "no_NO") # mac

load_dotenv(override=True)
LOCATION = "europe-north1"
PROJECT = os.environ["GCP_TEAM_PROJECT_ID"]
client = bigquery.Client(location=LOCATION, project=PROJECT)
```

:::: {.section-odd #om-fortellingen}
::: {.section-content}

### Om fortellingen


Denne fortellingen har som hensikt å formidle styringsdata fra Speil (den nye sykepengeløsningen).

Per nå omfatter dataen kun arbeidstakere, med unntak av sykmeldte brukere med strengt fortrolig adresse (kode 6).

:::: {#callout-box}
::: {.callout-note collapse="true" appearance="minimal"}
## Mer om dataen som presenteres

Dataen som presenteres stammer kun fra Speil. Årsaken til dette er at vi har lite eller mangelfull data på saksbehandling av sykepenger i Infotrygd.

Siden dataen er ment for å gjøre prioriteringer og strategiske veivalg i forbindelse med saksbehandling er det avgjørende at det som presenteres stemmer overens med det som faktisk skjer.

Foreløpig presenteres det i denne fortellingen data på innsendte søknader, fattede vedtak og forkastede vedtak. Det gjenstår fortsatt en del hendelsespunkter som omfatter for eksempel inntektsmeldinger, frister etc. Planen er å få dette på plass over tid.
:::

::: {.callout-note collapse="true" appearance="minimal"}
## Mer om teamet

Team Hvilepuls fra PO Helse har designet og drifter denne fortellingen. Teamet består av medlemmer forskjellige fagfelt, hentet fra ulike teams i produktområdet.

Vi ønsker å eie, drifte og formidle dataen vi selv genererer. På denne måten forsøker vi å sikre at dataen som formidles, stemmer overens med det som faktisk skjer.

[Les mer om teamet i Teamkatalogen.](https://teamkatalog.nav.no/team/ea2ba8f9-b956-4d78-857e-93e547449fc5){.external target="_blank"}

:::
::::

:::
::::


:::: {.section-even}
::: {.section-content}

::: {.intro-text}

### Søknad

Når den sykmeldte brukeren fyller ut og sender inn en søknad via våre digitale tjenester mottar vi det som en førstegangssøknad i Speil. Da begynner saksbehandlingen fra vår side.

Om brukeren ønsker å endre søknaden og sende den på nytt, kaller vi det en korrigert søknad.

:::

::: {.nokkeltall}

```{python}
# | class: nokkeltall
# | output: true
current_date = dt.datetime.now().date()
formatted_date = current_date.strftime("%d. %B %Y").replace(
    current_date.strftime("%B"), current_date.strftime("%B").lower()
)
print(f"Innsendte søknader per {formatted_date}")


```

:::

```{python}
def antall_for_n_uker_siden(
    antall_uker_siden, timestamp_felt, tabell, tilleggspredikat=""
):
    QUERY = f"""--sql
    SELECT
        COUNT(*)
    FROM `{tabell}`
    WHERE DATE_TRUNC(DATE({timestamp_felt}, 'Europe/Oslo'), WEEK(MONDAY)) >= DATE_TRUNC(DATE_SUB(DATE(CURRENT_TIMESTAMP(), 'Europe/Oslo'), INTERVAL {str(antall_uker_siden)} WEEK), WEEK(MONDAY))
    AND DATE_TRUNC(DATE({timestamp_felt}, 'Europe/Oslo'), WEEK(MONDAY)) < DATE_TRUNC(DATE_SUB(DATE(CURRENT_TIMESTAMP(), 'Europe/Oslo'), INTERVAL {str(antall_uker_siden)} - 1 WEEK), WEEK(MONDAY))
    {tilleggspredikat}
    """

    query_job = client.query(QUERY)
    rows = query_job.result()

    # get first value in first row of RowIterator
    return [row[0] for row in rows][0]


```

:::: {.nokkeltallboks-layout}

```{python}
# | class: nokkeltallboks-innhold
# | output: true
value = antall_for_n_uker_siden(
    2, "soknad_mottatt", "styringsinfo_dataset.styringsinfo_sendt_soknad_view"
)
print(f"{value}\nto uker siden")
```


```{python}
# | class: nokkeltallboks-innhold
# | output: true
value = antall_for_n_uker_siden(
    1, "soknad_mottatt", "styringsinfo_dataset.styringsinfo_sendt_soknad_view"
)
print(f"{value}\nforrige uke")
```


```{python}
# | class: nokkeltallboks-innhold
# | output: true
value = antall_for_n_uker_siden(
    0, "soknad_mottatt", "styringsinfo_dataset.styringsinfo_sendt_soknad_view"
)
print(f"{value}\ndenne uken")
```

::::

```{python}
# | class: no-rows
# | output: true
mottatte_søknader(client).show()
```


```{python}
# | output: true
fig = antall_med_glidende_gjennomsnitt(
    "Antall mottatte søknader per dag og 7- og 28-dagers glidende gjennomsnitt",
    "soknad_mottatt",
    "styringsinfo_dataset.styringsinfo_sendt_soknad_view",
    client,
)
fig.show()
```

:::
::::

:::: {.section-odd #vedtak}
::: {.section-content}

### Vedtak

::: {.nokkeltall}

```{python}
# | class: nokkeltall
# | output: true
current_date = dt.datetime.now().date()
formatted_date = current_date.strftime("%d. %B %Y").replace(
    current_date.strftime("%B"), current_date.strftime("%B").lower()
)
print(f"Antall vedtak per {formatted_date}")
```

:::

::: {.nokkeltallboks-layout}
```{python}
vedtak_for_n_uker_siden = partial(
    antall_for_n_uker_siden,
    timestamp_felt="vedtak_fattet",
    tabell="styringsinfo_dataset.styringsinfo_vedtak_fattet_view",
    tilleggspredikat="AND har_utbetaling=true",
)
```

```{python}
# | class: nokkeltallboks-innhold-hvit
# | output: true
value = vedtak_for_n_uker_siden(2)
print(f"{value}\nto uker siden")
```


```{python}
# | class: nokkeltallboks-innhold-hvit
# | output: true
value = vedtak_for_n_uker_siden(1)
print(f"{value}\nforrige uke")
```


```{python}
# | class: nokkeltallboks-innhold-hvit
# | output: true
value = vedtak_for_n_uker_siden(0)
print(f"{value}\ndenne uken")
```

:::

```{python}
# | class: no-rows
# | output: true
antall_vedtak_fattet(client).show()
```

```{python}
# | output: true
fig = antall_med_glidende_gjennomsnitt(
    "Vedtak per dag og 7- og 28-dagers glidende gjennomsnitt",
    "vedtak_fattet",
    "styringsinfo_dataset.styringsinfo_vedtak_fattet_view",
    client,
    predikat="WHERE har_utbetaling=true",
)

fig.update_layout(
    paper_bgcolor="rgba(0,0,0,0)",
    plot_bgcolor="rgba(0,0,0,0)",
)
fig.show()
```

:::
::::

:::: {.section-even}
::: {.section-content}

### Ferdigstilt innenfor arbeidsgiverperioden

Her ser vi antall søknader der NAV ikke utfører saksbehandling fordi det er innenfor perioden arbeidsgiver skal dekke.


::: {.nokkeltall}

```{python}
# | class: nokkeltall
# | output: true
current_date = dt.datetime.now().date()
formatted_date = current_date.strftime("%d. %B %Y").replace(
    current_date.strftime("%B"), current_date.strftime("%B").lower()
)
print(f"Antall per {formatted_date}")
```

:::

::: {.nokkeltallboks-layout}
```{python}
auu_for_n_uker_siden = partial(
    antall_for_n_uker_siden,
    timestamp_felt="vedtak_fattet",
    tabell="styringsinfo_dataset.styringsinfo_vedtak_fattet_view",
    tilleggspredikat="AND har_utbetaling=false",
)
```

```{python}
# | class: nokkeltallboks-innhold
# | output: true
value = auu_for_n_uker_siden(2)
print(f"{value}\nto uker siden")
```


```{python}
# | class: nokkeltallboks-innhold
# | output: true
value = auu_for_n_uker_siden(1)
print(f"{value}\nforrige uke")
```


```{python}
# | class: nokkeltallboks-innhold
# | output: true
value = auu_for_n_uker_siden(0)
print(f"{value}\ndenne uken")
```

:::

```{python}
# | class: no-rows
# | output: true
antall_avsluttet_uten_utbetaling(client).show()
```

```{python}
# | output: true
fig = antall_med_glidende_gjennomsnitt(
    "Vedtak per dag og 7- og 28-dagers glidende gjennomsnitt",
    "vedtak_fattet",
    "styringsinfo_dataset.styringsinfo_vedtak_fattet_view",
    client,
    predikat="WHERE har_utbetaling=false",
)
fig.update_layout(
    paper_bgcolor="rgba(0,0,0,0)",
    plot_bgcolor="rgba(0,0,0,0)",
)
fig.show()
```

:::
::::

:::: {.section-odd}
::: {.section-content}

### Tid fra søknad til vedtak

Vi ser nå på alle søknader som det ble fattet vedtak på i løpet av en uke, og betrakter hvor mange dager det gikk fra vi mottok søknaden til vedtaket ble fattet.

- Nøkkeltallene viser antall søknader som det ble fattet vedtak på totalt, hvor mange av dem som ble ferdigstilt på under et døgn, samt søknader det har tatt mer enn 90 dager å ferdigstille
- For tidsbruk mellom 1 og 90 dager viser grafen under fordelingen
- For vedtak med flere søknader bruker vi tidspunktet fra den søknaden som ble sendt inn sist

```{python}
# | output: true
tid_fra_søknad_til_vedtak(client).show()
```

```{python}
# | output: true
print(f"Sist oppdatert: {dt.datetime.now()}")
```

:::
::::

::: {.tilbakemeldinger}

```{=html}

<div class="flexjarcontainer">
    <h3>Vi ønsker din tilbakemelding</h3>
        <div id="sendForm">
            <p style="font-size: 16px">
                Fant du den informasjonen du trengte?
            </p>
        <div class="buttons">
            <button id="yesButton">Ja</button>
            <button id="noButton">Nei</button>
        </div>
            <div id="additionalContent"></div>
        </div>
        <div id="thanksResponse">
            <p style="font-weight: 500">Takk for tilbakemeldingen <p>
            <img src="flexjar/src/icons/FaceSmile.svg">
        </div>
</div>

<script>
    document.getElementById('yesButton').addEventListener('click', function() {
        showAdditionalContent('Ja');
    });
    document.getElementById('noButton').addEventListener('click', function() {
        showAdditionalContent('Nei');
    });

    function showAdditionalContent(buttonValue) {
        var additionalContent = document.getElementById('additionalContent');
        var maxLength = 600;
        additionalContent.innerHTML = `
            <div id="sendtextContainer">
            <p style="font-weight: 500">
                Er det noe du vil trekke frem? (valgfritt)</p>
                    <div id="textareaContainer">
            <textarea id="additionalInput" maxlength="${maxLength}"></textarea>
            <div id="counter">${maxLength} tegn igjen</div>
            </div>
            <button id="sendButton">Send tilbakemelding</button>
            <div id="errorMessage" style="color: red; font-weight: 500">
                En feil førte til at meldingen ikke ble sendt. Vennligst prøv igjen.
            </div>
        `;

        var textarea = document.getElementById('additionalInput');
        var counter = document.getElementById('counter');
        textarea.addEventListener('input', function() {
            var remaining = maxLength - textarea.value.length;
            counter.textContent = remaining + ' tegn igjen';
        });

        sendButton.addEventListener('click', function() {
            var message = textarea.value;
            fetch('https://www.ekstern.dev.nav.no/syk/flexjar/api/v1/azure', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(
                    { 
                        feedback: message, 
                        svar: buttonValue,
                        app: "styringsinfo-datafortelling",
                        feedbackId: "datafortelling-slutt"
                    })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('En feil førte til at meldingen ikke ble sendt. Vennligst prøv igjen.');
                }
                var sendtextContainer = document.getElementById('sendForm');
                sendtextContainer.style.display = 'none';
                var thanksResponse = document.getElementById('thanksResponse');
                thanksResponse.style.display = 'flex';
            })
            .catch(error => {
                console.error('Error:', error);
                var errorMessageDiv = document.getElementById('errorMessage');
                errorMessageDiv.style.display = 'block';
            });
        });
    }
</script>

```

:::


```{=html}

<script type="text/javascript" src="https://cdn.amplitude.com/libs/amplitude-7.2.1-min.gz.js"></script>
    <script type="text/javascript">

        amplitude.getInstance().init('4000b8a4a426b0dbefbe011778062779', null, {
        apiEndpoint: "amplitude.nav.no/collect",
        serverZone: "EU",
        saveEvents: false,
        includeUtm: true,
        batchEvents: false,
        includeReferrer: true,
        });

        amplitude.getInstance().logEvent('besøk');

    </script>

<sc

```